<?php
/**
 * @file
 * Defines custom search form allowing user to choose from multiple search targets.
 */

/**
 * Implements hook_block_info().
 */
function ucla_tab_search_block_info() {
  $blocks['ucla_tab_search_tabs'] = array(
    'info' => t('UCLA Tabbed Search Block'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view() to add the custom form to the new block
 */
function ucla_tab_search_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'ucla_tab_search_tabs':
      $block['title'] = 'UCLA Search';
      $block['content'] = drupal_get_form('ucla_tab_search_tabs_form');
      break;
  }
  return $block;
}

/**
 * Form constructor for the tab'ed search.
 *
 * Notice a container element is used when we need to use #states form key.
 * There seems to be a problem in drupal core when trying to use it directly
 * from inside a vertical tab'ed form.
 *
 * @todo Maybe split on several forms, one per tab.
 */
function ucla_tab_search_tabs_form($form, &$form_state) {
////////////////////////////////////////////////////////////////////////////////
// prep for Reserves search
////////////////////////////////////////////////////////////////////////////////

// grab the PID and SEQ from Voyager
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'http://catalog.library.ucla.edu/cgi-bin/Pwebrecon.cgi?DB=local&PAGE=First');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$response = curl_exec ($ch);
curl_setopt($ch, CURLOPT_VERBOSE, 1);
curl_setopt($ch, CURLOPT_HEADER, 1);
$header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
$header = substr($response, 0, $header_size);
$body = substr($response, $header_size);
$my_pid_resp = preg_match('/cgi-bin\/Pwebrecon\.cgi\?PAGE=rbSearch&SEQ=\d+&PID=.+\">Course Reserves/', $body, $my_pid0);
$my_pid_resp = preg_match('/.+[^">Course Reserves]/', $my_pid0[0], $my_pid1);
$my_pid_resp = preg_match('/PID=.+/', $my_pid1[0], $my_pid2);
$my_pid_resp = preg_match('/[^PID=].+/', $my_pid2[0], $my_pid3);
$my_seq_resp = preg_match('/SEQ=\d\d\d\d\d\d\d\d\d\d\d\d\d\d/', $body, $my_seq0);
$my_seq_resp = preg_match('/\d\d\d\d\d\d\d\d\d\d\d\d\d\d/', $my_seq0[0], $my_seq1);
$search_pid = $my_pid3[0];
$search_seq = $my_seq1[0];
curl_close ($ch);

// retrieve the lists of Instructors, Departments and Courses for local select dropdowns
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'http://catalog.library.ucla.edu/'.$my_pid1[0]);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$response = curl_exec ($ch);
$page_array = explode("\n", $response);
$select_flag = 0;
$i = 0;
foreach( $page_array as $row ){
  if( strpos( strtolower($row), '<select name="inst">' ) !== false ) {
    $select_flag = 1;
    $select_num = 0;
  } else if( strpos( strtolower($row), '<select name="dept">' ) !== false ) {
    $select_flag = 1;
    $select_num = 1;
  } else if( strpos( strtolower($row), '<select name="crse">' ) !== false ) {
    $select_flag = 1;
    $select_num = 2;
  } else if ( $select_flag == 1 ){
    if ( strpos( strtolower($row), '</select>' ) !== false ){
      $select_flag = 0;
    } else {
      $row = preg_replace('/<OPTION VALUE="/','', $row);
      $row = preg_replace('/^\s+/','', $row);
      $row = preg_replace('/<\/OPTION>/','', $row);
      $select_options = explode('">', $row);
      $select_options_array[$select_num][$i] = $select_options[0];
      $i+=1;
      $select_options_array[$select_num][$i] = $select_options[1];
      $i+=1;
    }
  }
}

// build out arrays for local select dropdowns
$length = count($select_options_array[0]);
for ($i = 0; $i < $length; $i++)
{
    $select_options_array_inst[$select_options_array[0][$i]] = $select_options_array[0][$i+1];
//    $select_options_array_string[] = "'".$select_options_array[0][$i]."' => t('".$select_options_array[0][$i+1]."'),";
    $i++;
}
$length = count($select_options_array[1]);
for ($j = $i; $j < $length+$i; $j++)
{
    $select_options_array_dept[$select_options_array[1][$j]] = $select_options_array[1][$j+1];
    $j++;
}
$length = count($select_options_array[2]);
for ($k = $j; $k < $length+$j-1; $k++) // -1 to avoid leaving pointer past the end of the array (causes krumo fail)
{
    $select_options_array_crse[$select_options_array[2][$k]] = $select_options_array[2][$k+1];
    $k++;
}

curl_close ($ch);
////////////////////////////////////////////////////////////////////////////////
// END prep for Reserves search
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// set up tabs
////////////////////////////////////////////////////////////////////////////////
  $form['tabs'] = array(
    '#type' => 'vertical_tabs',
//    '#default_tab' => 'edit-books',
  );
  $fieldset_default = array(
    '#type' => 'fieldset',
    '#group' => 'tabs',
    '#collapsible' => TRUE,
    '#tree' => TRUE,
  );
  $search_button = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );
  $query_textfield = array(
    '#type' => 'textfield',
  );
  // Overrides to include default and extra callback.
  $form['#submit'] = array('ucla_tab_search_tabs_form_submit', 'ucla_search_custom_form_submit');

  
  ////////////////////////////////////////////////////////////////////////////////
  // Books & more tab.
  // Books & more tab.
  // Books & more tab.
  $form['books'] = array(
    '#title' => t('Books & more'),
  ) + $fieldset_default;
  $form['books']['text_query'] = $query_textfield;
  $form['books']['text_query']['#attributes'] = array(
    'placeholder' => t('Find books, journals and more.'),
  );


// moving keyword block
$form['books']['ucla_catalog_search_index'] = array(
    '#type' => 'select',
    '#options' => array(
        'GKEY^*' => t('Keyword'),
        'TKEY^' => t('Title'),
        'TAL2' => t('Title - start of'),
        'TKEY' => t('Title phrase'),
        'JKEY^' => t('Journal title'),
        'JAL2' => t('Journal title - start of'),
        'SEKW' => t('Series title'),
        'NAME@' => t('Author list'),
        'NAME+' => t('Author List (last name, first name)'),
        'AUTH@' => t('Author and title list'),
        'SUBJ@' => t('Subject list'),
        'SUBJ+' => t('Subject list - start of'),
        'CALL+' => t('Call number'),
        'ISBN' => t('ISBN'),
        'ISSN' => t('ISSN'),
    ),
    '#states' => array(
      'visible' => array(':input[name="books[catalog]"]' => array('value' => 'BM-CAT')),
    ),
  );
// end moving keyword block

  $form['books']['catalog'] = array(
    '#type' => 'radios',
    '#options' => array(
        'BM-Mel' => t('Melvyl UC Catalog (+selected articles)'),
        'BM-CAT' => t('UCLA Library Catalog'),
    ),
    '#default_value' => 'BM-Mel',
  );
  $form['books']['catalog_container_mel'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(':input[name="books[catalog]"]' => array('value' => 'BM-Mel')),
    ),
    '#attributes' => array(
        'class' => array(
          'pane-description',
        ),
    ),
  );

 $form['books']['catalog_container_mel']['description'] = array(
    '#markup' => t('<strong>What am I searching?</strong></br>
<strong>Melvyl</strong> provides information about articles, books, journals and other materials held by UCLA, other University of
California (UC) campuses, and libraries worldwide. This search is limited to University of California Libraries, but
can be changed via a pulldown search limit on the results screen. Many records contain links to full-text articles from
<a href="http://ucla.worldcat.org/advancedsearch"> selected databases. </a>
<p><p>Need more help? Browse our <a href="http://guides.library.ucla.edu/">Subject Guides</a>'),
  );
  $form['books']['catalog_container_cat'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(':input[name="books[catalog]"]' => array('value' => 'BM-CAT')),
    ),
    '#attributes' => array(
        'class' => array(
          'pane-description',
        ),
    ),
  );


    $form['books']['catalog_container_cat']['description'] = array(
    '#markup' => t('<strong>What am I searching?</strong></br>
<strong>UCLA Library Catalog</strong> provides information about the holdings of the UCLA Library, the Southern Regional Library Facility (SRLF), and specialized collections across campus. It includes journals, and periodicals by title, <strong> but it does not contain journal article titles or authors.</strong>'),
  );


  
  $form['books']['books_search'] = $search_button;
  $form['books']['books_search']['#name'] = 'op_books';

  
  ////////////////////////////////////////////////////////////////////////////////
  // Articles tab.
  // Articles tab.
  // Articles tab.
  $form['articles'] = array(
    '#title' => t('Articles'),
  ) + $fieldset_default;
  $form['articles']['text_query'] = $query_textfield;
  $form['articles']['text_query']['#attributes'] = array(
    'placeholder' => t('Quick article search. Search several databases at once.'),
  );

  $defaults['search_type'][] = 'keyword';
  $form['articles']['search_index'] = array(
    '#type' => 'select',
    '#default_value' => $defaults['search_type'],
    '#options' => array(
        'title' => t('Title'),
        'author' => t('Author'),
        'fulltext' => t('Full text'),
        'keyword' => t('Keyword'),
        'subject' => t('Subject'),
        'abstract' => t('Abstract'),
        'isbn' => t('ISBN'),
        'issn' => t('ISSN'),
    ),
  );
  $form['articles']['search_year'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
        'placeholder' => t('Year (yyyy)'),
    ),
  );
  $defaults['category'][] = '103266';
  $form['articles']['search_categories'] = array(
    '#type' => 'checkboxes',
    '#default_value' => $defaults['category'],
    '#options' => array(
      '103267' => t('<a href="http://www.library.ucla.edu/search/arts-humanities">Arts and Humanities</a>'),
      '103349' => t('<a href="http://www.library.ucla.edu/search/business-economics">Business and Economics</a>'),
      '103269' => t('<a href="http://www.library.ucla.edu/search/engineering-applied-sciences">Engineering and Applied Sciences</a>'),
      '103266' => t('<a href="http://www.library.ucla.edu/search/general-databases">General</a>'),
      '103378' => t('<a href="http://www.library.ucla.edu/search/health-life-sciences">Health and Life Sciences</a>'),
      '103270' => t('<a href="http://www.library.ucla.edu/search/physical-sciences-mathematics">Physical Sciences and Mathematics</a>'),
      '103268' => t('<a href="http://www.library.ucla.edu/search/social-sciences">Social Sciences</a>'),
    ),
  );




  $form['articles']['articles_search'] = $search_button;
  $form['articles']['articles_search']['#name'] = 'op_articles';

// begin  code for description text  - ccthompson

    $form['articles']['articles_container_mel'] = array(
        '#type' => 'container',
        '#states' => array(
            'visible' => array(':input[name="articles[catalog]"]' => array('value' => 'articles-Mel')),
        ),
        '#attributes' => array(
            'class' => array(
                'pane-description',
            ),
        ),
    );

    $form['articles']['articles_container_mel']['description'] = array(
        '#markup' => t('Articles in selected databases are searched. </br>For a more comprehensive listing, use <a href="http://unitproj.library.ucla.edu/search/subjects.cfm">Databases by Subject</a>.'),
    );


// end  code for description text  - ccthompson





  
  ////////////////////////////////////////////////////////////////////////////////
  // Database's tab.
  // Database's tab.
  // Database's tab.
  $form['databases'] = array(
    '#title' => t('Databases'),
  ) + $fieldset_default;
  $form['databases']['text_query'] = $query_textfield;
  $form['databases']['text_query']['#attributes'] = array(
    'placeholder' => t('Search for a database title.'),
  );
  $form['databases']['sfx_search_index_container'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(':input[name="databases[databases_catalog]"]' => array('value' => 'ONE')),
    ),
  );
  $form['databases']['ucla_tabbed_index_container'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(':input[name="databases[databases_catalog]"]' => array('value' => 'TWO')),
    ),
  );
  $form['databases']['method'] = array(
    '#type' => 'radios',
    '#options' => array(
        'within' => t('Contains'),
        'starts' => t('Starts with'),
    ),
    '#default_value' => 'within',
  );





  $form['databases']['databases_search'] = $search_button;
  $form['databases']['databases_search']['#name'] = 'op_databases';

// begin  code for description text  - ccthompson

    $form['databases']['databases_container_mel'] = array(
        '#type' => 'container',
        '#states' => array(
            'visible' => array(':input[name="databases[catalog]"]' => array('value' => 'databases-Mel')),
        ),
        '#attributes' => array(
            'class' => array(
                'pane-description',
            ),
        ),
    );

    $form['databases']['databases_container_mel']['description'] = array(
        '#markup' => t('

<strong>What am I searching?</strong></br>Database titles and descriptions of what the database contains. The majority are licensed, subscription titles and will require a computer to be configured for <a href="http://www.library.ucla.edu/service/campus-access">off-campus access</a> if not being accessed from on campus.
If you do not find the database you are seeking, try searching the <a href="http://catalog.library.ucla.edu">UCLA Library Catalog</a> or <a href="http://guides.library.ucla.edu">Research Guides</a>.
<p>
<strong>Other Search Options</strong></br>
<a href="http://unitproj.library.ucla.edu/search/subjects.cfm">Find Databases by Subject</a></br>
<a href="http://guides.library.ucla.edu/atoz">A-Z List of Databases</a></br>


          '),
    );


// end  code for description text  - ccthompson





  ////////////////////////////////////////////////////////////////////////////////
  // Journals tab.
  // Journals tab.
  // Journals tab.
  $form['journals'] = array(
    '#title' => t('Journals'),
  ) + $fieldset_default;
  $form['journals']['text_query'] = $query_textfield;
  $form['journals']['text_query']['#attributes'] = array(
    'placeholder' => t('Search e-journal titles.'),
  );
  $form['journals']['catalog'] = array(
    '#type' => 'radios',
    '#options' => array(
        'J-E' => t('UCelinks for e-journals'),
        'J-ALL' => t('UCLA Library Catalog for print and e-journals'),
    ),
'#default_value' => 'J-E',
  );
  $form['journals']['sfx_search_index_container'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(':input[name="journals[catalog]"]' => array('value' => 'J-E')),
    ),
  );
  $form['journals']['sfx_search_index_container']['sfx_search_index'] = array(
    '#type' => 'select',
    '#options' => array(
        'within' => t('Contains'),
        'starts' => t('Starts with'),
        'exact' => t('Exact'),
    ),
    '#default_value' => 'starts',
  );
  $form['journals']['ucla_tabbed_index_container'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(':input[name="journals[catalog]"]' => array('value' => 'J-ALL')),
    ),
  );
  $form['journals']['ucla_tabbed_index_container']['ucla_tabbed_index'] = array(
    '#type' => 'select',
    '#options' => array(
        'JKEY^' => t('Contains'),
        'JAL2' => t('Starts with'),
    ),
    '#default_value' => 'JKEY^',
  );



  $form['journals']['journals_search'] = $search_button;
  $form['journals']['journals_search']['#name'] = 'op_journals';

  $form['journals']['journals_container_mel'] = array(
        '#type' => 'container',
        '#states' => array(
            'visible' => array(':input[name="journals[catalog]"]' => array('value' => 'J-E')),
        ),
        '#attributes' => array(
            'class' => array(
                'pane-description',
            ),
        ),
    );

  $form['journals']['journals_container_mel']['description'] = array(
        '#markup' => t('<strong>What am I searching?</strong></br>
The titles and abbreviations of journals subscribed to electronically by the UCLA Library and linked to article databases and Google Scholar.  To find journal articles by title and author, use <a href="http://ucelinks.cdlib.org:8888/sfx_local/cgi/core/citation-linker.cgi">Citation Linker</a> .
<p>
<strong>Other Search Options</strong></br>
<a href="http://ucelinks.cdlib.org:8888/sfx_ucla/az/default?&param_sid_save=e21718f6c370481f02f52709928f7941&param_lang_save=eng&param_letter_group_save=A&param_perform_save=searchCategories&param_letter_group_script_save=Latin&param_chinese_checkbox_save=0&param_services2filter_save=getFullTxt&param_services2filter_save=getSelectedFullTxt&param_current_view_save=table&param_pattern_save=&param_jumpToPage_save=&param_type_save=browseLetterGroup&param_textSearchType_save=startsWith&&param_perform_value=searchTitle" target="blank" title="A-Z Journal Titles Search">A-Z journal titles</a></br>
<a href="http://ucelinks.cdlib.org:8888/sfx_local/cgi/core/citation-linker.cgi">Locate the Article from your Citation</a>'),
    );


  ////////////////////////////////////////////////////////////////////////////////
  // Guides's tab.
  // Guides's tab.
  // Guides's tab.
  $form['guides'] = array(
    '#title' => t('Research Guides'),
  ) + $fieldset_default;
  $form['guides']['text_query'] = $query_textfield;
  $form['guides']['text_query']['#attributes'] = array(
    'placeholder' => t('Search for course guides, subject guides and useful resources.'),
  );


  $form['guides']['guides_search'] = $search_button;
  $form['guides']['guides_search']['#name'] = 'op_guides';
    // begin  code for description text  - ccthompson

    $form['guides']['guides_container_mel'] = array(
        '#type' => 'container',
        '#states' => array(
            'visible' => array(':input[name="guides[catalog-journal]"]' => array('value' => 'guides-Mel')),
        ),
        '#attributes' => array(
            'class' => array(
                'pane-description',
            ),
        ),
    );

    $form['guides']['guides_container_mel']['description'] = array(
        '#markup' => t('<strong>What am I searching?</strong></br>Research Guides created by Library staff.'),
    );


// end  code for description text  - ccthompson

  
  
////////////////////////////////////////////////////////////////////////////////
  // oac's tab.
  // oac's tab.
  // oac's tab.
  $form['oac'] = array(
    '#title' => t('Archives & Manuscripts'),
  ) + $fieldset_default;
  $form['oac']['text_query'] = $query_textfield;
  $form['oac']['text_query']['#attributes'] = array(
    'placeholder' => t('Search the OAC for a manuscript or archive'),
  );
  $form['oac']['oac_search'] = $search_button;
  $form['oac']['oac_search']['#name'] = 'op_oac';

    // begin  code for description text  - ccthompson

    $form['oac']['oac_container_mel'] = array(
        '#type' => 'container',
        '#states' => array(
            'visible' => array(':input[name="oac[catalog]"]' => array('value' => 'oac-Mel')),
        ),
        '#attributes' => array(
            'class' => array(
                'pane-description',
            ),
        ),
    );

    $form['oac']['oac_container_mel']['description'] = array(
        '#markup' => t('<strong>What am I searching?</strong></br>The Online Archive of California (OAC) is a Web-accessible, digital gateway to information about materials such as manuscripts, photographs, and works of art held in libraries, museums, archives, and other institutions across California, including UCLA. The OAC allows patrons to view finding aids, i.e., inventories of collection content, which provide detailed information about collection content that is readily accessible and searchable.'),
    );


// end  code for description text  - ccthompson














  return $form;
}


/** ***********************************************************************************************************************
 * Form submission handler for ucla_tab_search_form().
 *
 * This is mainly about mapping values preparing them to the othe submit
 * handler.
 * Notice form_id is renamed to ucla_form_id in order to avoid collision with
 * Drupal core forms form_id also provided automatically.
 */
function ucla_tab_search_tabs_form_submit($form, &$form_state) {
  module_load_include('inc', 'ucla_search', 'includes/ucla_search_logger');
  module_load_include('inc', 'ucla_search', 'includes/ucla_search_handlers');
  $search_date = $_SERVER['REQUEST_TIME'];
  $browser_ip = (isset($_SERVER['HTTP_X_FORWARDED_FOR']) ? $_SERVER['HTTP_X_FORWARDED_FOR'] : $_SERVER['REMOTE_ADDR']);
//  $search_form = 'ucla_tab';

  $tab_form_id_map = array(
    'books' => array('BM-CAT' => 'BM-CAT', 'BM-Mel' => 'BM-Mel'),
    'articles' => array('ART' => 'ART', 'article' => 'article'),
    'journals' => array('J-ALL' => 'J-ALL', 'J-E' => 'J-E'),
    'databases' => array('within' => 'within', 'starts' => 'starts'),
    'guides' => array('within' => 'within', 'starts' => 'starts'),
    'reserves' => array('within' => 'within', 'starts' => 'starts'),
    'oac' => array('within' => 'within', 'starts' => 'starts'),
  );

  foreach ($tab_form_id_map as $tab => $maps) {
    // The submit button name is used to decide where we are.
    if (empty($form_state['values']["op_$tab"])) {
      // Not this tab.
      continue;
    }
    if (is_array($maps)) {
//print_r($form_state['values']);
//exit;
		$search_form = $form_state['values'][tabs__active_tab];
		switch ($form_state['values'][tabs__active_tab]) {
        case 'edit-books':

//print_r($form_state['values'][tabs__active_tab]);
//exit;
        
        $form_state['values']['ucla_form_id'] = $maps[$form_state['values']['books']['catalog']];
	    switch ( $maps[$form_state['values']['books']['catalog']] ) {
	      case 'BM-Mel':
		// Put form info into array expected by search logger / handlers
		$search_info = array (
		'search_target' => 'melvyl',
		'search_terms' => $form_state['values']['books']['text_query'],
		'search_date' => $search_date,
		'browser_ip' => $browser_ip,
		'search_form' => $maps[$form_state['values']['books']['catalog']],
		);
		break;
	      case 'BM-CAT':
		// Put form info into array expected by search logger / handlers
		$search_info = array (
		'search_target' => 'catalog',
		'search_terms' => $form_state['values']['books']['text_query'],
		'search_code' => $form_state['values']['books']['ucla_catalog_search_index'],
		'search_date' => $search_date,
		'browser_ip' => $browser_ip,
		'search_form' => $maps[$form_state['values']['books']['catalog']],
		);
		break;
	    }
	break;

        case 'edit-articles':
	  $search_categories_codes = '';
	  foreach ($form_state['values']['articles']['search_categories'] as $search_categories_code) {
	    if( $search_categories_code > 0 ){
	      $search_categories_codes .= ' '.$search_categories_code;
	      }
	    }
	    if( $form_state['values']['articles']['search_year'] > 0 ){
	      $search_year = $form_state['values']['articles']['search_year'];
	    } else {
	      $search_year = 'date';
	    }
	  // Put form info into array expected by search logger / handlers
	  $search_info = array (
	  'search_target' => 'articles',
	  'search_terms' => $form_state['values']['articles']['text_query'],
	  'search_code' => $form_state['values']['articles']['search_index'],
	  'search_year' => $search_year,
	  'search_categories' => $search_categories_codes,
	  'search_date' => $search_date,
	  'browser_ip' => $browser_ip,
	  'search_form' => 'ART',
	  );
	break;

        case 'edit-databases':
	  $search_categories_codes = '';
	  foreach ($form_state['values']['articles']['search_categories'] as $search_categories_code) {
	    if( $search_categories_code > 0 ){
	      $search_categories_codes .= ' '.$search_categories_code;
	      }
	    }
	  if( $form_state['values']['articles']['search_year'] > 0 ){
	    $search_year = $form_state['values']['articles']['search_year'];
	  } else {
	    $search_year = 'date';
	  }
	  switch ( $form_state['values']['databases']['method'] ) {
//	  $maps[$form_state['values']['databases']['method']] ) {
	    case 'within':
	      // Put form info into array expected by search logger / handlers
	      $search_info = array (
	      'search_target' => 'database',
	      'search_type' => 'contains',
	      'search_terms' => $form_state['values']['databases']['text_query'],
	      'search_date' => $search_date,
	      'browser_ip' => $browser_ip,
              'search_form' => 'DB',
	      );
	    break;
	    case 'starts':
	      // Put form info into array expected by search logger / handlers
	      $search_info = array (
	      'search_target' => 'database',
	      'search_type' => 'starts',
	      'search_terms' => $form_state['values']['databases']['text_query'],
	      'search_date' => $search_date,
	      'browser_ip' => $browser_ip,
              'search_form' => 'DB',
	      );
	      break;
	  }
        break;

        case 'journals-dev':
          $form_state['values']['ucla_form_id'] = $maps[$form_state['values']['journals']['catalog']];
	    switch ( $maps[$form_state['values']['journals']['catalog']] ) {
	      case 'J-ALL':
		foreach ( $form_state['values']['journals']['ucla_tabbed_index_container']['ucla_tabbed_index'] as $tab => $type_choice ) {
		  // The submit button name is used to decide where we are.
		  if (empty( $form_state['values']['journals']['ucla_tabbed_index_container']['ucla_tabbed_index']['$tab'] )) {
		    // Not this tab.
		    continue;
		  }
		}
		// Put form info into array expected by search logger / handlers
		$search_info = array (
		'search_target' => 'melvyl',
		'search_terms' => $form_state['values']['books']['text_query'],
		'search_date' => $search_date,
		'browser_ip' => $browser_ip,
		'search_form' => 'J-E',
		);
	      break;
	      case 'J-E':
		// Put form info into array expected by search logger / handlers
		$search_info = array (
		'search_target' => 'catalog',
		'search_terms' => $form_state['values']['books']['text_query'],
		'search_code' => $form_state['values']['books']['ucla_catalog_search_index'],
		'search_date' => $search_date,
		'browser_ip' => $browser_ip,
		'search_form' => 'J-ALL',
		);
	      break;
	    }
        break;

        case 'edit-journals':
          $form_state['values']['ucla_form_id'] = $maps[$form_state['values']['journals']['catalog']];
	    switch ( $form_state['values']['journals']['catalog'] ) {
//	    switch ( $maps[$form_state['values']['journals']['catalog']] ) {
	      case 'J-ALL':
		$search_info = array (
		'search_target' => 'catalog',
		'search_terms' => $form_state['values']['journals']['text_query'],
		'search_code' => $form_state['values']['journals']['ucla_tabbed_index_container']['ucla_tabbed_index'],
		'search_date' => $search_date,
		'browser_ip' => $browser_ip,
		'search_form' => 'J-ALL',
		);
	      break;
	      case 'J-E':
		$search_info = array (
		'search_target' => 'sfx',
		'search_terms' => $form_state['values']['journals']['text_query'],
		'search_type' => $form_state['values']['journals']['sfx_search_index_container']['sfx_search_index'],
		'search_date' => $search_date,
		'browser_ip' => $browser_ip,
		'search_form' => 'J-E',
		);
	      break;
	    }
        break;

        case 'edit-guides':
	  // Put form info into array expected by search logger / handlers
	  $search_info = array (
	  'search_target' => 'guides',
	  'search_terms' => $form_state['values']['guides']['text_query'],
	  'search_date' => $search_date,
	  'browser_ip' => $browser_ip,
	  'search_form' => 'RG',
	  );
	break;

        case 'reserves':
	  // Put form info into array expected by search logger / handlers
	  $search_info = array (
	  'search_target' => 'reserves',
	  'search_inst' => $form_state['values']['reserves']['ucla_reserves_inst_index'],
	  'search_dept' => $form_state['values']['reserves']['ucla_reserves_dept_index'],
	  'search_crse' => $form_state['values']['reserves']['ucla_reserves_crse_index'],
	  'search_pid' => $form_state['values']['reserves']['search_pid'],
	  'search_seq' => $form_state['values']['reserves']['search_seq'],
	  'search_date' => $search_date,
	  'browser_ip' => $browser_ip,
	  'search_form' => 'RES',
	  );
        break;

        case 'edit-oac':
	  // Put form info into array expected by search logger / handlers
	  $search_info = array (
	  'search_target' => 'oac',
	  'search_terms' => $form_state['values']['oac']['text_query'],
	  'search_date' => $search_date,
	  'browser_ip' => $browser_ip,
	  'search_form' => 'MA',
	  );
	break;

        default:
          // Not recognized.
	  $search_info = array (
	  'search_target' => 'error',
	  'search_terms' => 'BAD SEARCH - COULD NOT ID TAB',
	  'search_date' => $search_date,
	  'browser_ip' => $browser_ip,
	  'search_form' => 'UNKNOWN',
	  );
        break;
      }

    // Log the search info before doing the search
    ucla_search_log_search($search_info);
    // Send search info to router, which will do the actual search
    ucla_search_route_search($search_info);
    }
    else {
      $form_state['values']['ucla_form_id'] = $maps;
    }
  }
}
